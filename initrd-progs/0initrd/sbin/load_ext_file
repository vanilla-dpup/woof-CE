#!/bin/sh
# called by init
#
# params: 
#   $1: /path/to/savefile.4fs
#   $2: $SAVE_MP
#
# creates /tmp/savefile_loop with the following variables
#   $SAVEFILE_LOOP (it must be sourced)
#

L_CANNOT_RESIZE_PUPSAVE="SORRY, cannot resize %s" #printf
L_INCREASING_PUPSAVE='Increasing %s by %s Kbytes, please wait...' #printf
L_CONTINUING_LOADING="...continuing with loading %s..." #printf

SAVE_FN="$1" # ex: /mnt/dev_save/PLINUX/32bit/stretchsave_luks.4fs
SAVE_MP="$2" #
SAVE_SZ_FN=""

rm -f /tmp/savefile_loop

#===================================================================

#-- resize savefile?.. see /usr/sbin/resizepfile.sh
# resizepfile.sh creates pupsaveresizenew.txt with 2 variables
#    KILOBIG=32768
#    PUPSAVEFILEX=/PLINUX/32bit/stretchsave_luks.4fs
RESIZE_FN="$(dirname $SAVE_FN)/pupsaveresizenew.txt"
#delete following line when resize file location is fixed
if ! [ -f "$RESIZE_FN" ] ; then
  RESIZE_FN="${SAVE_MP}/pupsaveresizenew.txt"
fi
if [ -f "$RESIZE_FN" ] ; then
  #(1) resize extX file. see below (2)
  . $RESIZE_FN #$PUPSAVEFILEX $KILOBIG
  if echo "$SAVE_FN" | grep "$PUPSAVEFILEX" ; then
    echo "* Will attempt to resize savefile" #debug
    if [ ! -e /bin/resize2fs ];then
      echo -en "\\033[1;31m" > /dev/console
      echo -n "$(printf "${L_CANNOT_RESIZE_PUPSAVE}" "$PUPSAVEFILEX")" > /dev/console #31=red
      echo -en "\\033[0;39m" > /dev/console
      rm -f $RESIZE_FN
    else
      SAVE_SZ_FN="$SAVE_FN"
      rm -f $RESIZE_FN
      echo > /dev/console
      echo -n "$(printf "${L_INCREASING_PUPSAVE}" "$PUPSAVEFILEX" "$KILOBIG")" >/dev/console
      dd if=/dev/zero bs=1024 count=$KILOBIG >> $SAVE_SZ_FN
      sync
    fi
  fi
fi

#===================================================================

SAVEFILE_LOOP="$(losetup -f)"
losetup $SAVEFILE_LOOP $SAVE_FN

#===================================================================

if [ "$PFSCK" = "yes" ] ; then # $PFSCK - exported by init
  echo "" > /dev/console
  e2fsck -y "$SAVEFILE_LOOP" &>/dev/console
fi

if [ "$SAVE_SZ_FN" ] ; then
  #(2) resize extX filesystem - fill extX file. see above (1)
  [ "$PFSCK" != "yes" ] && e2fsck -y "$SAVEFILE_LOOP"
  resize2fs -pf "$SAVEFILE_LOOP" #no size, will fill all of file.
  echo -n "$(printf "${L_CONTINUING_LOADING}" "$PUPSAVEFILE")" > /dev/console
  sync
fi

(
  echo "SAVEFILE_LOOP=$SAVEFILE_LOOP"
) > /tmp/savefile_loop

### END ###
