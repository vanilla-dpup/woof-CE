#!/bin/bash
#call from 3builddistro, current dir is inside 'sandbox3'.
#also want to call from LoginManager (/usr/sbin/loginmanager) from running puppy
# (3buildistro will copy this script to sandbox3/rootfs-complete/usr/sbin).
#pass in space-delimited names of apps to run as spot, each with false or true.
#ex: 'seamonkey=true' 'sylpheed=false'
#...=true means turn on spot, =false turn off. no parameter then do nothing.
#130601 first version, seamonkey only.
#130604 use code from /usr/sbin/run-as-spot, created by jamesbond (James Budiono).
#130604 passed-in params to have actual names of executables.

SPOTAPPS="$@"

SPOT_HOME=$(awk -F: '$1=="spot" {print $6}' /etc/passwd)

touch /root/.spot-status

run_as_spot() { #$1:app  $2:filename
	SCRIPT="/tmp/${2##*/}-as-spot"
	echo "#!/bin/sh
exec run-as-spot \"$1\" \"\$@\"" > "$SCRIPT"
	chmod 755 "$SCRIPT"
	if [ -e "$2" ] && cmp -s "$2" "$SCRIPT"; then
		rm -f "$SCRIPT"
		return
	fi
	mv -f "$SCRIPT" "$2"
}

#setup the app to run as spot or root...
generic_func() {
 case $ONEAPPvalue in
  true)
   run_as_spot ${ONEAPPpath}/${ONEAPPname} /usr/local/bin/${ONEAPPname}
  ;;
  false)
   [ -e /usr/local/bin/${ONEAPPname} ] && rm -f /usr/local/bin/${ONEAPPname}
  ;;
 esac
 return 0
}

CHOWN=0

for ONEAPP in $SPOTAPPS
do

 ONEAPPname="`echo -n "$ONEAPP" | cut -f 1 -d '='`"  #ex: seamonkey
 ONEAPPvalue="`echo -n "$ONEAPP" | cut -f 2 -d '='`" #ex: true
 ONEAPPspec="`find ${PATH//:/ } -mindepth 1 -maxdepth 1 -name ${ONEAPPname} | grep -vF /usr/local/bin/${ONEAPPname} | head -n 1`"
 if [ ! "$ONEAPPspec" ];then
  #executable does not exist, so remove from list, if there...
  sed -i -e "/^${ONEAPPname}=/d" /root/.spot-status
  continue
 fi
 ONEAPPpath="$(dirname "$ONEAPPspec")"

 generic_func

 if [ $? -ne 0 ];then
  sed -i -e "/^${ONEAPPname}=/d" /root/.spot-status #remove.
  continue
 fi

 #record choice, for future runs of Login&Security Manager...
 ONEAPPcurrent="$(grep "^${ONEAPPname}=" /root/.spot-status)"
 if [ "$ONEAPPcurrent" = "${ONEAPPname}=${ONEAPPvalue}" ];then
  continue
 elif [ "$ONEAPPcurrent" = "" ];then
  echo "${ONEAPPname}=${ONEAPPvalue}" >> /root/.spot-status
 elif [ "$ONEAPPcurrent" != "${ONEAPPname}=${ONEAPPvalue}" ];then
  sed -i -e "s%^${ONEAPPname}=.*%${ONEAPPname}=${ONEAPPvalue}%" /root/.spot-status
 fi
 
 case ${ONEAPPvalue} in true|TRUE|yes|YES|on|ON)
   CHOWN=1 ;;
 esac

done

[ $CHOWN -eq 1 ] && find ${SPOT_HOME} \( ! -user spot -or ! -group spot \) -exec chown -h spot:spot {} \;

###END###
