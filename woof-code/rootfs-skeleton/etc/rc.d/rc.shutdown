#!/bin/ash
#(c) Copyright Barry Kauler LGPL v2 2006,2007 www.puppylinux.com
# - shutdownconfig creates the pupsave (savefile, savefolder)
# - for a full hd install, PUPMODE=2 (no /initrd)
# /etc/inittab: ::shutdown:/etc/rc.d/rc.shutdown

[ -f /tmp/debugshutdown ] && exec &>/dev/console

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin

if [ ! -f /tmp/debugshutdown ] ; then
	clear
	exec 1> /dev/null 2>&1
fi

. /etc/rc.d/PUPSTATE #variables created at bootup by init script in initrd...
. /etc/DISTRO_SPECS

echo "${DISTRO_NAME} ${DISTRO_VERSION} $(gettext 'is now shutting down...')" > /dev/console
echo "Executing /etc/rc.d/rc.shutdown..."

#v2.0.0 there could be a save tmpfs->persistent-storage running...
while pidof -sq snapmergepuppy; do sleep 1; done

cd /
killall -TERM `cat /etc/windowmanager` > /dev/null 2>&1 #just a precaution...

# some packages have a service script that requires stopping...

/etc/rc.d/rc.services stop

sfs_load --cli stop

#see shinobar's msg in http://murga-linux.com/puppy/viewtopic.php?p=605451#605451
umount -a -t cifs,smbfs,nfs,sshfs

# ask init not to run a login shell again
kill -USR1 1

#=======================================================================
# terminate stuff
for EXE in /proc/[1-9]*/exe; do
 [ -e $EXE ] || continue
 PID=${EXE#/proc/}
 PID=${PID%/exe}
 case "$PID" in
 1|$$|$PPID)
  continue
  ;;
 *)
  BADPIDS="$BADPIDS $PID"
  ;;
 esac
done
for i in 1 2 3 4 5;do
 NBADPIDS=
 for PID in $BADPIDS;do
  kill -0 $PID || continue
  if [ $i -eq 1 ];then
   echo "Terminating process $PID..." >/dev/console
  elif [ $i -eq 5 ];then
   echo "Killing process $PID..." >/dev/console
  fi
  NBADPIDS="$NBADPIDS $PID"
 done
 [ -z "$NBADPIDS" ] && break
 if [ $i -eq 5 ];then
  kill -9 $NBADPIDS
 else
  kill $NBADPIDS
  sleep 1
 fi
done

#=======================================================================

if [ "$PUPSAVE" != "" ];then
 #f.s. and partition where ${DISTRO_FILE_PREFIX}save.2fs is located...
 SAVEPART="`echo -n "$PUPSAVE" | cut -f 1 -d ','`"
 SAVEFILE="`echo -n "$PUPSAVE" | cut -f 3 -d ','`"
fi

[ ! -f /tmp/debugshutdown ] && clear >/dev/console

#when the working files run in tmpfs in ram, they are saved (below) and /tmp and /var
#are screened out. however, some PUPMODES mount ${DISTRO_FILE_PREFIX}save.2fs directly on /initrd/pup_rw,
#the top aufs layer, meaning that there is no intermediary tmpfs in ram for working
#files, hence everything is saved directly, ditto for PUPMODE=2 a full h.d. install.
#hence need to do some explicit wiping here...
[ -d /var/tmp ] && rm -rf /var/tmp/* 2> /dev/null #100820

#save session...
case $PUPMODE in
 5) #v2.02 first boot.
  echo "$(gettext "Session not saved")" >/dev/console
  ;;

 12) echo "$(printf "$(gettext '%s mounted directly top layer, session already saved.')" "${SAVEFILE##*/}")" >/dev/console ;;
 13)
  #read a file named /tmp/session_ramdisk_result, the answer file whether save the ramdisk session to savefile or not
  #It contains variable RAMDISK_SAVE_SESSION where the values are 'y' or 'n'
  RAMDISK_SAVE_SESSION=
  if [ -s /tmp/session_ramdisk_result ]; then
   . /tmp/session_ramdisk_result
  fi
  if [ "$RAMDISK_SAVE_SESSION" == "" ]; then
   asktosave_session >/dev/console
   retval=$?
   [ $retval -ne 0 ] && echo "$(gettext "Session not saved")" >/dev/console
  elif [ "$RAMDISK_SAVE_SESSION" == "y" ]; then
   retval=0
  else
   retval=1
  fi
  if [ $retval -eq 0 ]; then 
    echo "$(printf "$(gettext 'Saving session to %s (%s)...')" "${SAVEFILE}" "${SAVEPART}")" >/dev/console
    /usr/sbin/snapmergepuppy
  fi 
  ;;
 *)
  echo "$(gettext "Session not saved")" >/dev/console
  sleep 2
  ;;
esac

# ==============================================================

[ -e /initrd/pup_loop ] && mount -o remount,ro /initrd/pup_loop
[ -e /initrd/mnt/pdrv ] && mount -o remount,ro /initrd/mnt/pdrv
mount -o remount,ro /initrd/mnt/dev_save

swapoff -a #works only if swaps are in mtab or ftab

sync
umount-FULL -in -a -r -d >/dev/null 2>&1

### END ###
