#!/bin/ash
#LGPL Barry Kauler 2006,2007 www.puppylinux.com
#This script is called by /etc/rc.d/rc.sysinit. the purpose is to perform
#any required updates to files when a new version of Puppy is booted.

status_func() {
	if [ $1 -eq 0 ];then
		echo -e "\\033[74G\\033[1;32mdone\\033[0;39m" >/dev/console
	else
		echo -e "\\033[72G\\033[1;31mfailed\\033[0;39m" >/dev/console
	fi
}

#=============================================================
# automatically update some stuff

#set -x

. /etc/DISTRO_SPECS

#=============================================================
# main

PUPMODE="$1"

[ "$PUPMODE" = "" ] && exit

echo -n "Updating..." >/dev/console #updating

update_cache_files() {
       
       for gtkcmd in gtk gtk4
       do
	if [ -e /usr/bin/${gtkcmd}-update-icon-cache ] ; then
		#gtk-update-icon-cache /usr/share/icons/hicolor
		#gtk-update-icon-cache /usr/local/share/icons/hicolor 2>/dev/null
		echo -n " gtk-icon-cache" >/dev/console
		find /usr/share/icons -maxdepth 1 -mindepth 1 -type d | \
		while read dir ; do
			[ -h "$dir" ] && continue
			[ -d "$dir"/cursors ] && continue # in case 3rd party cursors installed
			[ -f "$dir"/index.theme ] &&  ${gtkcmd}-update-icon-cache -f -i "$dir" #note, can use  --ignore-theme-index if want to...
		done
	  break
	 fi
       done
	
	if [ /usr/bin/labwc-xdgmenu ] ; then
		LANG=C fixmenus #Reconstruct configuration files for JWM, IceWM...
		[ -n "$WAYLAND_DISPLAY" ] && killall -HUP labwc
	fi
	if [ -e /usr/bin/update-desktop-database ] ; then
		rm -f /usr/share/applications/mimeinfo.cache 2>/dev/null
		update-desktop-database /usr/share/applications
		rm -f /usr/local/share/applications/mimeinfo.cache 2>/dev/null
		[ -d /usr/local/share/applications ] && update-desktop-database /usr/local/share/applications
	fi

	#these are normally done in 3builddistro.
	ldconfig 2>/dev/null
	iconvconfig 2>/dev/null # creates /usr/lib/gconv/gconv-modules.cache

	if [ -e /usr/bin/fc-cache ] ; then
		fc-cache -f 2>/dev/null # some sfs files may have fonts
	fi

	if [ -e /usr/bin/update-mime-database ] ; then
		[ -d /usr/share/mime ] && update-mime-database /usr/share/mime
		[ -d /usr/local/share/mime ] && update-mime-database /usr/local/share/mime
	fi

	if [ -e /usr/bin/glib-compile-schemas ] ; then
		[ -d /usr/share/glib-2.0/schemas ] && glib-compile-schemas /usr/share/glib-2.0/schemas 2>/dev/null
		[ -d /usr/local/share/glib-2.0/schemas ] && glib-compile-schemas /usr/local/share/glib-2.0/schemas 2>/dev/null
	fi

	if [ -e /usr/bin/gio-querymodules ] ; then
		[ -d /usr/lib/gio/modules ] && gio-querymodules /usr/lib/gio/modules
		[ -d /usr/lib64/gio/modules ] && gio-querymodules /usr/lib64/gio/modules
	fi

	for gtkver in 2.0 3.0 4.0
        do
	  if [ -e /usr/bin/update-gtk-immodules-${gtkver} ] ; then
	     update-gtk-immodules-${gtkver}
	  elif [ -e /usr/bin/gtk-query-immodules-${gtkver} ] ; then
	     gtk-query-immodules-${gtkver} --update-cache
	  fi
	done

	[ -x /usr/bin/mandb ] && mandb # this makes man -k work

	depmod 2>/dev/null # some sfs may have kernel modules
	
	# some sfs may have udev hardware database
	systemd-hwdb update 2>/dev/null
}

#===========================================================================

if [ "$PUPMODE" = "w" ] ; then #chroot from woof
	update_cache_files
	exit
fi

# /initrd/tmp/rc_update_force_pm5 is created by the initrd init script
#   empty pupsaves cause problems
#   in such a case we have to update everything.
if [ -f /initrd/tmp/rc_update_force_pm5 ] ; then
	echo "rc.update: Empty pupsave? Simulating PUPMODE=5 ..."
	PUPMODE=5
fi

. /initrd/pup_ro2/etc/DISTRO_SPECS #has DISTRO_VERSION, DISTRO_BINARY_COMPAT, DISTRO_FILE_PREFIX

#===========================================================================

if [ -f /initrd/tmp/version_update_flag ]; then
 rm -f /initrd/tmp/version_update_flag 2>/dev/null
 echo -n " to $DISTRO_VERSION" >/dev/console

 bdrv-update
fi

#===========================================================================

#stuff to update on every boot...

#think have to do this everytime...
cp -af /initrd/pup_ro2/etc/DISTRO_SPECS /etc/

# if layers have changed, may need to fix menu (etc)...
. /etc/rc.d/BOOTCONFIG
if [ -n "$PREVUNIONRECORD" -a "$LASTUNIONRECORD" != "$PREVUNIONRECORD" ];then
	echo -en " layered-filesystem \\033[1;35mnext boot will be faster!\\033[0;39m" > /dev/console
	echo "layers have changed since previous boot, updating menus..."
	update_cache_files
elif [ -z "$PREVUNIONRECORD" -a -n "$EXTRASFSLIST" ];then # first boot with extra SFSs loaded
	update_cache_files
fi

### END ###
